name: Set up

on:
  push:
    branches:
      - release
  release:
    types: [published]

jobs:
    # Prepare the environment for the build and push
  prepare:
    name: 'Prepare ðŸ§‚'
    runs-on: ubuntu-latest

    steps:

      - name: Set ref name
        id: ref-name
        run: |
          SEMVER_REGEX="^(v?)(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)"
          if [[ ${{ github.ref_name }} == "main" ]]; then
            echo "REF_NAME=main" >> $GITHUB_ENV
          elif [[ ${{ github.ref_name }} == "dev" ]]; then
            echo "REF_NAME=dev" >> $GITHUB_ENV
          elif [[ ${{ github.ref_name }} == "release" ]]; then
            echo "REF_NAME=release" >> $GITHUB_ENV
          elif [[ ${{ github.ref_name }} =~ $SEMVER_REGEX ]]; then
            echo "REF_NAME=release" >> $GITHUB_ENV
          else
            echo -e "\033[31m Ref ${{ github.ref_name }} does not match! Aborting version!"
            exit 1
          fi
      
      # Checkout repository
      - name: Checkout repository
        if: ${{ env.REF_NAME == 'release' && github.event_name == 'release' }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if tag exists
        if: ${{ env.REF_NAME == 'release' && github.event_name == 'release' }}
        run: |
          onReleaseBranch=false
          for tag in $(git tag); do
            if [[ $tag == ${{ github.event.release.tag_name }} ]]; then
              onReleaseBranch=true
            fi
          done
          if [[ $onReleaseBranch == false ]]; then
            echo -e "\033[31m Tag ${{ github.event.release.tag_name }} does not exist on release branch! Aborting version update!"
            exit 1
          fi

      - name: Print the REF NAME
        run:
          echo ${{ env.REF_NAME }}

    outputs:
      ref-name: ${{ env.REF_NAME }}

  # Update version
  version:
    name: 'Update version ðŸ“¦'
    needs: prepare
    runs-on: ubuntu-latest
    if: ${{ needs.prepare.outputs.ref-name == 'release' && github.event_name == 'release' }}
    steps:
      - name: Checkout repository branch release
        uses: actions/checkout@v3
        with:
          ref: release
          fetch-depth: 0

      - name: Get version of the tag
        run: |
          echo "TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - name: Print the tag
        run: echo $TAG

      - name: Patch the version
        run: |
          sed -i "s/\"version\": \"[0-9]*\.[0-9]*\.[0-9]*\"/\"version\": \"$TAG\"/g" package.json

      - name: Path version npm
        run: |
          npm version $TAG -m 'chore(release): %s'
      
      - name: Push version
        run: |
          git push